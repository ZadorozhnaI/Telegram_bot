name: KBOT-CICD

on: 
  push:
    branches:
      - develop
  
permissions:
  contents: write
  packages: write
      
env:
  OS: linux
  ARCH: amd64


jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54

      - name: Run test
        run: make test

      - name: Docker hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Build&Push
        env:
          APP: "kbot"
          REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}
        run: make image push clean
  

  cd:
    name: Kbot CD
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: echo "VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag=strenv(VERSION)' bot/values.yaml
          
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "update version $VERSION"
          git push
  

